@model HotelReservationsManager.Models.Reservation
@{
    ViewData["Title"] = "Create Reservation";
}

<h2>Create Reservation</h2>

@if (ViewBag.ModelErrors != null && ((IEnumerable<string>)ViewBag.ModelErrors).Any())
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in (IEnumerable<string>)ViewBag.ModelErrors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

<form asp-action="Create" id="reservationForm">
    <div class="form-group">
        <label asp-for="RoomId" class="control-label">Room</label>
        <select asp-for="RoomId" class="form-control" asp-items="ViewBag.Rooms" onchange="updateTotalAmount()"></select>
        <span asp-validation-for="RoomId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Clients</label>
        <select name="selectedClients" class="form-control" multiple onchange="updateTotalAmount()">
            @foreach (var client in ViewBag.Clients)
            {
                <option value="@client.Id">@client.FirstName @client.LastName (@client.Email, @(client.IsAdult ? "Adult" : "Child"))</option>
            }
        </select>
        <span class="text-danger">@Html.ValidationMessage("selectedClients")</span>
    </div>
    <div class="form-group">
        <label asp-for="CheckInDate" class="control-label"></label>
        <input asp-for="CheckInDate" class="form-control" type="date" onchange="updateTotalAmount()" />
        <span asp-validation-for="CheckInDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CheckOutDate" class="control-label"></label>
        <input asp-for="CheckOutDate" class="form-control" type="date" onchange="updateTotalAmount()" />
        <span asp-validation-for="CheckOutDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IncludesBreakfast" class="control-label"></label>
        <input asp-for="IncludesBreakfast" class="form-check-input" onchange="updateTotalAmount()" />
        <span asp-validation-for="IncludesBreakfast" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IsAllInclusive" class="control-label"></label>
        <input asp-for="IsAllInclusive" class="form-check-input" onchange="updateTotalAmount()" />
        <span asp-validation-for="IsAllInclusive" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="TotalAmount" class="control-label">Total Amount</label>
        <input asp-for="TotalAmount" class="form-control" readonly />
        <span asp-validation-for="TotalAmount" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        async function updateTotalAmount() {
            const roomId = document.querySelector('#RoomId').value;
            const selectedClients = Array.from(document.querySelector('[name="selectedClients"]').selectedOptions).map(opt => opt.value);
            const checkInDate = document.querySelector('#CheckInDate').value;
            const checkOutDate = document.querySelector('#CheckOutDate').value;
            const includesBreakfast = document.querySelector('#IncludesBreakfast').checked;
            const isAllInclusive = document.querySelector('#IsAllInclusive').checked;

            if (roomId && checkInDate && checkOutDate && selectedClients.length > 0) {
                const response = await fetch('/Reservations/CalculateTotalAmount', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        roomId: parseInt(roomId),
                        selectedClients: selectedClients.map(id => parseInt(id)),
                        checkInDate: checkInDate,
                        checkOutDate: checkOutDate,
                        includesBreakfast: includesBreakfast,
                        isAllInclusive: isAllInclusive
                    })
                });

                const result = await response.json();
                document.querySelector('#TotalAmount').value = result.totalAmount.toFixed(2);
            }
        }
        window.onload = updateTotalAmount;
    </script>
}